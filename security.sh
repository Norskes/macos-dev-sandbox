#!/bin/bash

# Core (non-removable) blacklist for sensitive paths
SANDBOX_CORE_BLOCKED_PATHS=(
    # SSH –∏ –∫–ª—é—á–∏
    "$HOME/.ssh"
    "$HOME/.gnupg"
    "$HOME/.ssh/config"
    "$HOME/.ssh/id_rsa"
    "$HOME/.ssh/id_rsa.pub"

    # –ë—Ä–∞—É–∑–µ—Ä—ã
    "$HOME/Library/Application Support/Google/Chrome"
    "$HOME/Library/Application Support/Firefox"
    "$HOME/Library/Application Support/Chromium"
    "$HOME/Library/Application Support/Safari"

    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    "$HOME/Documents"
    "$HOME/Downloads"
    "$HOME/Pictures"
    "$HOME/Movies"
    "$HOME/Music"
    "$HOME/Desktop"

    # –û–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –∫–æ–Ω—Ñ–∏–≥–∏
    "$HOME/.aws"
    "$HOME/.config/gcloud"
    "$HOME/.azure"
    "$HOME/.kube"
    "$HOME/.docker"
    "$HOME/.gitconfig"
    "$HOME/.npmrc"

    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    "$HOME/Library/Keychains"
    "$HOME/Library/Application Support/com.apple.TCC"
    "$HOME/Library/Application Support/AddressBook"
    "$HOME/Library/Application Support/iCloud"
    "$HOME/Library/Messages"
    "$HOME/Library/Mail"
    "$HOME/Library/Safari"

    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    "/etc"
    "/private"
    "/System"
    "/Library"
)

# Paths that are exceptions to blocked paths
SANDBOX_EXCEPTIONS=(
    # –ö–µ—à
    "$HOME/Library/Caches"
    "$HOME/Library/Caches/npm"
    "$HOME/Library/Caches/yarn"
    "$HOME/Library/Caches/pip"

    # –õ–æ–≥–∏
    "$HOME/Library/Logs"
    "$HOME/Library/Logs/sandbox.log"

    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    "/private/tmp"
    "/private/var/folders"
    "/private/var/folders/*/T"

    # –ü–∞–∫–µ—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
    "$HOME/.npm"
    "$HOME/.yarn/cache"
    "$HOME/.pnpm-store"
    "$HOME/.cache"

    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã
    "/private/etc/hosts"
    "/private/etc/resolv.conf"
    "/private/etc/protocols"
    "/private/etc/services"
    "/etc/hosts"
    "/etc/resolv.conf"
    "/etc/protocols"
    "/etc/services"

    # Node.js –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    "/usr/local/bin/node"
    "/usr/local/include/node"
    "/usr/local/lib/node_modules"
    "$HOME/.node-gyp"
    "$HOME"
    "/Users"
)

# –ü—É—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –¥–ª—è —á—Ç–µ–Ω–∏—è
SANDBOX_READ_PATHS=(
    "/usr/local"        # For node, npm etc.
    "/usr/bin"          # System utilities
    "$HOME/.npm"        # npm cache
    "$HOME/.yarn"       # yarn cache
    "$HOME/.pnpm-store" # pnpm cache
    "$HOME/.cache"      # Common cache
    "$HOME/.nvm"        # Node Version Manager
)

# Generate sandbox profile
generate_security_profile() {
    local profile_path="$1"
    local sandbox_dir="$2"
    local read_paths_str="$3"
    local home_dir="$4"

    # Debug logging
    echo "üîç Debug: Generating security profile"
    echo "üìÑ Profile path: $profile_path"
    echo "üìÅ Sandbox dir: $sandbox_dir"
    echo "üè† Home dir: $home_dir"
    echo "üìù Read paths: $read_paths_str"

    # Convert comma-separated string back to array
    IFS=',' read -ra read_paths <<<"$read_paths_str"

    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    cat >"$profile_path" <<EOF
(version 1)
(debug deny)
(deny default)

;; 1. –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –º–∏–Ω–∏–º—É–º)
(import "system.sb")
(allow process*)
(allow sysctl*)
(allow system-socket)
(allow mach-lookup)
(allow file-ioctl)
(allow network*)

;; 2. –ë–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)
(allow file-read*
    (literal "/usr")
    (literal "/bin")
    (literal "/sbin")
    (literal "/Users")
    (literal "$home_dir")
    (subpath "/usr/local/bin")
    (subpath "/usr/local/lib")
    (subpath "/usr/local/include")
)

;; 3. –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ) - —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ
(allow file-read*
    (literal "/etc/hosts")
    (literal "/etc/resolv.conf")
    (literal "/etc/protocols")
    (literal "/etc/services")
    (literal "/private/etc/hosts")
    (literal "/private/etc/resolv.conf")
    (literal "/private/etc/protocols")
    (literal "/private/etc/services")
    (literal "/etc/ssl/openssl.cnf")
    (literal "/System/Library/OpenSSL/openssl.cnf")
    (literal "/System/Library/Security/Certificates.bundle")
    (literal "/usr/lib/system/libsystem_kernel.dylib")
    (literal "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation")
)

;; 3.1. –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)
(allow file-read*
    (subpath "/System/Library/Frameworks")
    (subpath "/System/Library/PrivateFrameworks")
    (subpath "/System/Library/Extensions")
    (subpath "/Library/Extensions")
)

;; 3.2. –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)
(allow file-read*
    (subpath "/usr/bin")
    (subpath "/bin")
    (subpath "/usr/sbin")
    (subpath "/sbin")
)

;; 4. –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
(allow file*
    (subpath "$sandbox_dir")
    (subpath "/private/tmp")
    (subpath "/private/var/folders")
)

;; 5. –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∫—ç—à–∞ –∏ –ª–æ–≥–æ–≤
(allow file*
    (subpath "$home_dir/Library/Caches")
    (subpath "$home_dir/Library/Logs")
    (subpath "$home_dir/.npm")
    (subpath "$home_dir/.yarn")
    (subpath "$home_dir/.pnpm-store")
    (subpath "$home_dir/.cache")
)

;; 6. –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ø—É—Ç–µ–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    for path in "${read_paths[@]}"; do
        # Replace $HOME with actual home directory
        path=${path/\$HOME/$home_dir}
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º /usr/bin - –æ–Ω —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ read-only
        if [[ "$path" != "/usr/bin" ]]; then
            echo "(allow file-read* (subpath \"$path\"))" >>"$profile_path"
        fi
    done

    # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ü–û–°–õ–ï —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    cat >>"$profile_path" <<EOF

;; 7. –ö–†–ò–¢–ò–ß–ù–´–ï –ë–õ–û–ö–ò–†–û–í–ö–ò (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤—ã—à–µ)
(deny file-read* file-write*
    ;; –ë–ª–æ–∫–∏—Ä—É–µ–º –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
    (literal "/etc/passwd")
    (literal "/etc/shadow")
    (literal "/etc/sudoers")
    (literal "/etc/group")
    (literal "/etc/gshadow")
    (literal "/etc/master.passwd")
    (literal "/private/etc/passwd")
    (literal "/private/etc/shadow")
    (literal "/private/etc/sudoers")
    (literal "/private/etc/group")
    (literal "/private/etc/gshadow")
    (literal "/private/etc/master.passwd")
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—É—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for path in "${SANDBOX_CORE_BLOCKED_PATHS[@]}"; do
        # Replace $HOME with actual home directory
        path=${path/\$HOME/$home_dir}
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ - –æ–Ω–∏ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤—ã—à–µ
        if [[ "$path" != "/etc" && "$path" != "/private" && "$path" != "/System" && "$path" != "/Library" ]]; then
            echo "    (subpath \"$path\")" >>"$profile_path"
        fi
    done
    echo ")" >>"$profile_path"

    echo "‚úÖ Security profile created: $profile_path"
}

# Export functions and variables
export -f generate_security_profile
export SANDBOX_CORE_BLOCKED_PATHS
export SANDBOX_EXCEPTIONS
export SANDBOX_READ_PATHS
